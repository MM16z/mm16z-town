[{"C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\index.js":"1","C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\App.js":"2","C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\reportWebVitals.js":"3","C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\components\\main-page-components\\main-section.js":"4","C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\components\\login-page-components\\login-page.js":"5","C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\components\\register-page-components\\register-page.js":"6","C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\components\\notfound-page-components\\notfound-page.js":"7","C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\components\\container-components\\background-container.js":"8","C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\components\\container-components\\text-box-container.js":"9","C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\components\\container-components\\navbar-container.js":"10","C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\components\\user-panel-page-components\\user-panel-page.js":"11","C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\auth\\getUserauth.js":"12","C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\auth\\hasJWT.js":"13"},{"size":1599,"mtime":1662004688473,"results":"14","hashOfConfig":"15"},{"size":1071,"mtime":1662104367187,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1661488462773,"results":"17","hashOfConfig":"15"},{"size":2134,"mtime":1662061772390,"results":"18","hashOfConfig":"15"},{"size":3746,"mtime":1662105544482,"results":"19","hashOfConfig":"15"},{"size":3498,"mtime":1662105374111,"results":"20","hashOfConfig":"15"},{"size":731,"mtime":1661614237589,"results":"21","hashOfConfig":"15"},{"size":346,"mtime":1661589956917,"results":"22","hashOfConfig":"15"},{"size":2110,"mtime":1662038927667,"results":"23","hashOfConfig":"15"},{"size":3208,"mtime":1662020348654,"results":"24","hashOfConfig":"15"},{"size":6713,"mtime":1662105919305,"results":"25","hashOfConfig":"15"},{"size":366,"mtime":1662103087310,"results":"26","hashOfConfig":"15"},{"size":170,"mtime":1662104278385,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zyh9yy",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\index.js",[],[],"C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\App.js",[],[],"C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\components\\main-page-components\\main-section.js",[],[],"C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\components\\login-page-components\\login-page.js",["72","73"],[],"import \"../../assets/sass/sass-components/login-page/login-page.scss\";\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nimport BackgroundContainer from \"../container-components/background-container\";\r\nimport NavbarContainer from \"../container-components/navbar-container\";\r\nimport hasJWT from \"../../auth/hasJWT\";\r\nimport getUserauth from \"../../auth/getUserauth\";\r\n\r\nfunction LoginPage() {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const emailRef = useRef();\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const routeAuth = () => {\r\n    if (hasJWT()) {\r\n      if (\r\n        getUserauth().then((result) => {\r\n          if (result.data.status === \"error\") {\r\n            localStorage.clear();\r\n            window.location = \"/\";\r\n          } else {\r\n            navigate(\"/user/panel\");\r\n          }\r\n        })\r\n      );\r\n      alert(\"already login\");\r\n      alert(\"dont broke my Pepehands code :(\");\r\n    }\r\n  };\r\n\r\n  // const handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n  //   Axios.post(\r\n  //     \"http://localhost:3001/login\",\r\n  //     JSON.stringify({ email: email, password: password }),\r\n  //     {\r\n  //       headers: { \"Content-Type\": \"application/json\" },\r\n  //     }\r\n  //   );\r\n  //   Axios.interceptors.response.use(\r\n  //     function (response) {\r\n  //       if (response.data.status === \"ok\") {\r\n  //         alert(\"Login success\");\r\n  //         localStorage.setItem(\"token\", response.data.token);\r\n  //         window.location = \"/user/panel\";\r\n  //       } else {\r\n  //         alert(\"login failed\");\r\n  //       }\r\n  //     },\r\n  //     function (error) {\r\n  //       return Promise.reject(error);\r\n  //     }\r\n  //   );\r\n  //   setEmail(\"\");\r\n  //   setPassword(\"\");\r\n  // };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const Jsondata = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n    fetch(\"http://localhost:3001/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(Jsondata),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.status === \"ok\") {\r\n          alert(\"Login success\");\r\n          localStorage.setItem(\"token\", data.token);\r\n          window.location = \"/user/panel\";\r\n        } else {\r\n          alert(\"login failed\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n      });\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    routeAuth();\r\n    emailRef.current.focus();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"login-page-container\">\r\n      <NavbarContainer navCurrentPath=\"/Login\" />\r\n      <form method=\"post\" onSubmit={handleSubmit}>\r\n        <div className=\"login-inputcontainer\">\r\n          <label htmlFor=\"email-input\">Enter your email :D</label>\r\n          <input\r\n            className=\"inputborder\"\r\n            id=\"email-input\"\r\n            type=\"email\"\r\n            ref={emailRef}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n            required\r\n          ></input>\r\n          <label htmlFor=\"password-input\">Enter your password :V</label>\r\n          <input\r\n            className=\"inputborder\"\r\n            id=\"password-input\"\r\n            type=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            value={password}\r\n            required\r\n          ></input>\r\n          <input id=\"login-submitbtn\" type=\"submit\" value=\"Login\"></input>\r\n        </div>\r\n      </form>\r\n      <BackgroundContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\components\\register-page-components\\register-page.js",["74","75"],[],"import \"../../assets/sass/sass-components/register-page/register-page.scss\";\r\n\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport NavbarContainer from \"../container-components/navbar-container\";\r\nimport BackgroundContainer from \"../container-components/background-container\";\r\n\r\nimport hasJWT from \"../../auth/hasJWT\";\r\nimport getUserauth from \"../../auth/getUserauth\";\r\n\r\nfunction RegisterPage() {\r\n  const emailRef = useRef();\r\n  const usernameRef = useRef();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const routeAuth = () => {\r\n    if (hasJWT()) {\r\n      if (\r\n        getUserauth().then((result) => {\r\n          if (result.data.status === \"error\") {\r\n            localStorage.clear();\r\n            window.location = \"/\";\r\n          } else {\r\n            navigate(\"/user/panel\");\r\n          }\r\n        })\r\n      );\r\n      alert(\"already login\");\r\n      alert(\"dont broke my Pepehands code :(\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const Jsondata = {\r\n      username: username,\r\n      email: email,\r\n      password: password,\r\n    };\r\n    fetch(\"http://localhost:3001/register\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(Jsondata),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.status === \"ok\") {\r\n          alert(\"Register Success\");\r\n          window.location = \"/\";\r\n        } else {\r\n          alert(\"Register failed\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n      });\r\n    setUsername(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setSuccess(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    routeAuth();\r\n    emailRef.current.focus();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"register-page-container\">\r\n      <NavbarContainer navCurrentPath=\"/Register\" />\r\n      <form method=\"post\" onSubmit={handleSubmit}>\r\n        <div className=\"register-inputcontainer\">\r\n          <label htmlFor=\"email-input\">Enter your email</label>\r\n          <input\r\n            className=\"inputborder\"\r\n            id=\"email-input\"\r\n            type=\"email\"\r\n            ref={emailRef}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n            required\r\n          ></input>\r\n          <label htmlFor=\"password-input\">Enter your password</label>\r\n          <input\r\n            className=\"inputborder\"\r\n            id=\"password-input\"\r\n            type=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            value={password}\r\n            required\r\n          ></input>\r\n          <label htmlFor=\"username-input\" id=\"username-input-label\">\r\n            Enter your Username\r\n          </label>\r\n          <input\r\n            className=\"inputborder\"\r\n            id=\"username-input\"\r\n            type=\"text\"\r\n            ref={usernameRef}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            value={username}\r\n            required\r\n          ></input>\r\n          <input id=\"register-submitbtn\" type=\"submit\" value=\"Register\"></input>\r\n        </div>\r\n      </form>\r\n      <BackgroundContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\components\\notfound-page-components\\notfound-page.js",[],[],"C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\components\\container-components\\background-container.js",[],[],"C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\components\\container-components\\text-box-container.js",[],[],"C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\components\\container-components\\navbar-container.js",["76","77","78"],[],"import \"../../assets/sass/sass-components/container-component/navbar-container.scss\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nimport hasJWT from \"../../auth/hasJWT\";\r\n\r\nfunction NavbarContainer(probs) {\r\n  const navigate = useNavigate();\r\n  const [userloginpanel, setUserLoginpanel] = useState(\r\n    !hasJWT() ? (\r\n      <Link\r\n        className={\r\n          window.location.pathname === \"/\"\r\n            ? \"nav-text-id3\"\r\n            : window.location.pathname === \"/login\"\r\n            ? \"nav-text-id3\"\r\n            : window.location.pathname === \"/register\"\r\n            ? \"nav-text-id3\"\r\n            : window.location.pathname === \"/user/panel\"\r\n            ? \"nav-text-id3_user-panel\"\r\n            : \"\"\r\n        }\r\n        to=\"/login\"\r\n      >\r\n        login\r\n      </Link>\r\n    ) : null\r\n  );\r\n  const [userregisterpanel, setUserRegisterpanel] = useState(\r\n    !hasJWT() ? (\r\n      <Link\r\n        className={\r\n          window.location.pathname === \"/\"\r\n            ? \"nav-text-id4\"\r\n            : window.location.pathname === \"/login\"\r\n            ? \"nav-text-id4\"\r\n            : window.location.pathname === \"/register\"\r\n            ? \"nav-text-id4\"\r\n            : window.location.pathname === \"/user/panel\"\r\n            ? \"nav-text-id4_user-panel\"\r\n            : \"\"\r\n        }\r\n        to=\"/register\"\r\n      >\r\n        register\r\n      </Link>\r\n    ) : null\r\n  );\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <nav\r\n      className={\r\n        window.location.pathname === \"/\"\r\n          ? \"nav-container\"\r\n          : window.location.pathname === \"/login\"\r\n          ? \"nav-container_login\"\r\n          : window.location.pathname === \"/register\"\r\n          ? \"nav-container_register\"\r\n          : window.location.pathname === \"/user/panel\"\r\n          ? \"nav-container_user-panel\"\r\n          : \"\"\r\n      }\r\n    >\r\n      <img\r\n        id=\"homebtn\"\r\n        src=\"/images/home.png\"\r\n        onClick={() => {\r\n          window.location = \"/\";\r\n        }}\r\n      ></img>\r\n      <div className=\"nav-texts\">\r\n        <div id=\"nav-text-id1\">MM16z</div>\r\n        <div id=\"nav-text-id2\">Town</div>\r\n        <div\r\n          className={\r\n            window.location.pathname === \"/\"\r\n              ? \"nav-text-id5\"\r\n              : window.location.pathname === \"/login\"\r\n              ? \"nav-text-id5_login-page\"\r\n              : window.location.pathname === \"/register\"\r\n              ? \"nav-text-id5_register-page\"\r\n              : window.location.pathname === \"/user/panel\"\r\n              ? \"nav-text-id5_user-panel-page\"\r\n              : \"\"\r\n          }\r\n          onClick={() => {\r\n            navigate(\"/user/panel\");\r\n          }}\r\n        >\r\n          {probs.navCurrentPath}\r\n        </div>\r\n        {userloginpanel}\r\n        {userregisterpanel}\r\n        {hasJWT() ? (\r\n          <button\r\n            id=\"logoutbtn\"\r\n            onClick={() => {\r\n              localStorage.removeItem(\"token\");\r\n              // navigate(\"/\");\r\n              alert(\"Logged out\");\r\n              window.location = \"/\";\r\n            }}\r\n          ></button>\r\n        ) : null}\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavbarContainer;\r\n","C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\components\\user-panel-page-components\\user-panel-page.js",["79"],[],"import \"../../assets/sass/sass-components/user-panel-page/user-panel-page.scss\";\r\nimport \"../../assets/sass/sass-components/container-component/navbar-container.scss\";\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nimport NavbarContainer from \"../container-components/navbar-container\";\r\nimport BackgroundContainer from \"../container-components/background-container\";\r\nimport TextBoxContainer from \"../container-components/text-box-container\";\r\nimport getUserauth from \"../../auth/getUserauth\";\r\nimport hasJWT from \"../../auth/hasJWT\";\r\n\r\nfunction UserPanelPage() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [postcontext, setPostContext] = useState(\"\");\r\n  const [userpostdata, setUserPostData] = useState([]);\r\n  const [usereditinput, setUserEditinput] = useState(false);\r\n  const [preveditdata, setprevEditdata] = useState();\r\n  const [userpostid, setPostid] = useState();\r\n\r\n  const editdataRef = useRef();\r\n  const postcontextRef = useRef();\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const onEdithandleClick = (currentpostcontext, postid) => {\r\n    setUserEditinput(true);\r\n    setprevEditdata(currentpostcontext);\r\n    setPostid(postid);\r\n  };\r\n\r\n  const routeAuth = () => {\r\n    if (hasJWT()) {\r\n      if (\r\n        getUserauth().then((result) => {\r\n          if (result.data.status === \"error\") {\r\n            localStorage.clear();\r\n            window.location = \"/\";\r\n            console.log(result);\r\n          } else {\r\n            setUsername(result.data.decoded.username);\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      navigate(\"404\");\r\n      alert(\"out of session\");\r\n    }\r\n  };\r\n\r\n  const getUserposts = () => {\r\n    Axios.get(\"http://localhost:3001/user_posts\").then((response) => {\r\n      setUserPostData(response.data);\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const response = Axios.post(\r\n      \"http://localhost:3001/createpost\",\r\n      JSON.stringify({\r\n        postfromuser: username,\r\n        userpostcontext: postcontext,\r\n      }),\r\n      {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      }\r\n    );\r\n    console.log(response);\r\n    Axios.interceptors.response.use(\r\n      function (response) {\r\n        if (response.data.status === \"ok\") {\r\n        } else {\r\n          alert(\"post failed\");\r\n        }\r\n      },\r\n      function (error) {\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n    alert(\"Post success\");\r\n    window.location = \"/\";\r\n    setPostContext(\"\");\r\n  };\r\n\r\n  const onDelhandleSubmit = (postid) => {\r\n    Axios.post(\r\n      \"http://localhost:3001/user_post_delete\",\r\n      JSON.stringify({\r\n        userpostid: postid,\r\n      }),\r\n      {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      }\r\n    )\r\n      .then((res) => {\r\n        console.log(\"deleted\", res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    alert(\"delete success!\");\r\n    window.location = \"/user/panel\";\r\n  };\r\n\r\n  const onEdithandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    Axios.post(\r\n      \"http://localhost:3001/user_post_edit\",\r\n      JSON.stringify({\r\n        postcontext: preveditdata,\r\n        postid: userpostid,\r\n      }),\r\n      {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      }\r\n    )\r\n      .then((res) => {\r\n        console.log(\"edited\", res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    alert(\"edit success!\");\r\n    window.location = \"/user/panel\";\r\n  };\r\n\r\n  let editinput = null;\r\n  if (usereditinput === true) {\r\n    editinput = (\r\n      <form onSubmit={onEdithandleSubmit}>\r\n        <div className=\"user-edit-panel-inputcontainer\">\r\n          <label htmlFor=\"post-text-input\" id=\"post-text-input\">\r\n            Let's edit! :D\r\n          </label>\r\n          <textarea\r\n            ref={editdataRef}\r\n            onChange={(e) => {\r\n              setprevEditdata(e.target.value);\r\n            }}\r\n            value={preveditdata}\r\n            required\r\n            className=\"post-edit-inputborder\"\r\n            id=\"post-edit-text-input\"\r\n            type=\"text\"\r\n          ></textarea>\r\n          <input\r\n            id=\"post-edit-submitbtn\"\r\n            type=\"submit\"\r\n            value=\"EditSubmit\"\r\n          ></input>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    routeAuth();\r\n    getUserposts();\r\n    postcontextRef.current.focus();\r\n    window.addEventListener(\"popstate\", function (event) {\r\n      window.location.replace((this.window.location = \"/\"));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"user-panel-container\">\r\n      <NavbarContainer navCurrentPath=\"/User-Panel\" />\r\n      <span id=\"username\">HI! {username} </span>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"user-panel-inputcontainer\">\r\n          <label htmlFor=\"post-text-input\">Write something nice :D</label>\r\n          <textarea\r\n            ref={postcontextRef}\r\n            onChange={(e) => {\r\n              setPostContext(e.target.value);\r\n            }}\r\n            value={postcontext}\r\n            required\r\n            className=\"post-inputborder\"\r\n            id=\"post-text-input\"\r\n            type=\"text\"\r\n          ></textarea>\r\n          <input id=\"post-submitbtn\" type=\"submit\" value=\"Post\"></input>\r\n        </div>\r\n      </form>\r\n      <section className=\"user-posts\">\r\n        <span id=\"user-post-text\">Your recent posts</span>\r\n        <div className=\"user-posts-container\">\r\n          {userpostdata\r\n            .filter((key) => key.post_from_user === username)\r\n            .map((val) => {\r\n              let postid = val.post_id;\r\n              let currentpostcontext = val.user_post_context;\r\n              return (\r\n                <TextBoxContainer\r\n                  key={postid}\r\n                  username={val.post_from_user}\r\n                  context={currentpostcontext}\r\n                  date={val.user_post_created_date.slice(0, 10)}\r\n                  onDelbtnclick={() => onDelhandleSubmit(postid)}\r\n                  onEditbtnclick={() => {\r\n                    onEdithandleClick(currentpostcontext, postid);\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n      </section>\r\n\r\n      {usereditinput ? (\r\n        <section className=\"usereditinput-container\">\r\n          <div\r\n            id=\"exit-edit\"\r\n            onClick={() => {\r\n              window.location = \"/user/panel\";\r\n            }}\r\n          >\r\n            X\r\n          </div>\r\n        </section>\r\n      ) : null}\r\n      {editinput}\r\n      <BackgroundContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserPanelPage;\r\n","C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\auth\\getUserauth.js",[],[],"C:\\Users\\min55\\Desktop\\Project Folders\\REACT\\MM16z-Works\\MM16z-MM16zTOWN\\client\\mm16z-town\\src\\auth\\hasJWT.js",[],[],{"ruleId":"80","severity":1,"message":"81","line":5,"column":8,"nodeType":"82","messageId":"83","endLine":5,"endColumn":13},{"ruleId":"84","severity":1,"message":"85","line":97,"column":6,"nodeType":"86","endLine":97,"endColumn":8,"suggestions":"87"},{"ruleId":"80","severity":1,"message":"88","line":19,"column":10,"nodeType":"82","messageId":"83","endLine":19,"endColumn":17},{"ruleId":"84","severity":1,"message":"85","line":75,"column":6,"nodeType":"86","endLine":75,"endColumn":8,"suggestions":"89"},{"ruleId":"80","severity":1,"message":"90","line":10,"column":26,"nodeType":"82","messageId":"83","endLine":10,"endColumn":43},{"ruleId":"80","severity":1,"message":"91","line":30,"column":29,"nodeType":"82","messageId":"83","endLine":30,"endColumn":49},{"ruleId":"92","severity":1,"message":"93","line":67,"column":7,"nodeType":"94","endLine":73,"endColumn":8},{"ruleId":"84","severity":1,"message":"85","line":165,"column":6,"nodeType":"86","endLine":165,"endColumn":8,"suggestions":"95"},"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'routeAuth'. Either include it or remove the dependency array.","ArrayExpression",["96"],"'success' is assigned a value but never used.",["97"],"'setUserLoginpanel' is assigned a value but never used.","'setUserRegisterpanel' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["98"],{"desc":"99","fix":"100"},{"desc":"99","fix":"101"},{"desc":"99","fix":"102"},"Update the dependencies array to be: [routeAuth]",{"range":"103","text":"104"},{"range":"105","text":"104"},{"range":"106","text":"104"},[2687,2689],"[routeAuth]",[2028,2030],[4621,4623]]